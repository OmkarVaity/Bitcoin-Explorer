version: "3.8"

services:
  postgres:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      retries: 50
      timeout: 50s
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  backend:
    build:
      context: ./backend
    container_name: backend
    environment:
      DB_HOST: postgres-db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5000:5000"
    networks:
      - my_network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:80"
    networks:
      - my_network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      retries: 3
      timeout: 5s

  ingestion:
    build:
      context: ./ingestion
    container_name: ingestion
    environment:
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:
